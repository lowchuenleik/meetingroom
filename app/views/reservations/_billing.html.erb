<div class="card text-center">
  <h5 id="card-unavailable"></h5>
  Insert card information here!
  <div class="card-body">
    <%= form_for [@venue,@reservation], html: {class:'form-horizontal add-card', id:"payment-form"} do |f| %>
      <%= f.hidden_field :name, value: @venue.name%>
      <%= f.hidden_field :start, as: :hidden, value: @reservation.start, class: 'start_hidden' %>
      <%= f.hidden_field :end, as: :hidden, value: @reservation.end, class: 'form-control input-md end_hidden' %>

      <div class="form-row">
        <label for="card-element">
          Credit or debit card!
        </label>
        <!-- <%= text_field_tag :card_number, nil, name: nil, class: 'form-control', data: {stripe: 'number' }, placeholder: 'Card Number' %> -->
        <div id="card-element" >
          <!-- a Stripe Element will be inserted here. -->
        </div>
      </div>
      <div id="card-errors" role="alert"></div>
      <br>
      <div class="form-actions">
        <%= f.button :Pay, class:'btn btn-primary' %>

        <%= link_to 'Delete',  
                    venue_reservation_path, 
                    method: :delete, 
                    class: 'btn btn-danger', 
                    data: { confirm: 'Are you sure?' }, 
                    remote: true unless @reservation.new_record? %>
      </div>
    <% end %>
  </div>
</div>

<script type='text/javascript'>

$(document).ready(function(){
  var stripe = Stripe(gon.stripe_key);
  var elements = stripe.elements();
 
  // Custom styling can be passed to options when creating an Element.
  var style = {
    base: {
      iconColor: '#c4f0ff',
      color: 'black',
      fontWeight: 500,
      fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',
      fontSize: '15px',
      fontSmoothing: 'antialiased',

      ':-webkit-autofill': {
        color: '#fce883',
      },
      '::placeholder': {
        color: '#87BBFD',
      },
    },
    invalid: {
      iconColor: '#FFC7EE',
      color: '#FFC7EE',
    }
  };

  // Create an instance of the card Element
  var card = elements.create('card', { style: style, iconStyle: 'solid' });

  // Add an instance of the card Element into the `card-element` <div>
  card.mount('#card-element');

  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the customer that there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the token to your server#
          //alert(result.token.id);
      //alert('Submitting form');
      var tok = result.token.id;
      $("input[id=stripe_temporary_token]").val(tok);
        stripeTokenHandler(result.token);
      }
    });
  });

  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);
    


    // Submit the form
    form.submit();
  }
});

</script>